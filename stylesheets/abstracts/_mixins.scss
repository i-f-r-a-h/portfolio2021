/*===============================================================================
    Table of contents

    1.BEM selectors
    2.social media color selector
    3.hero icons
    4.flex-layout
    5.media quires 
    6.hero outer sections
===============================================================================*/


// 1.BEM selectors
@mixin element($element) {
  &__#{$element} {
    @content;
  }
}

@mixin modifier($modifier) {
  &-#{$modifier} {
    @content;
  }
}

@mixin m($modifier) {
  &--#{$modifier} {
    @content;
  }
}


// 2.social media color selector
@mixin social-media($map, $p-el:null) {

  @each $social,
  $color in $map {
    @include m($social) {
      &:hover {
        background-color: $color;
        transition: 0.5s ease-in-out;
      }
    }
  }
}

// 3.hero icons
@mixin hero-icon($map, $p-el:null) {

  @each $social,
  $color in $map {
    @include m($social) {
      background-color: lighten($color, 40);

      &:hover {
        background-color: lighten($color, 35);
        transition: 1s ease-in-out;
      }
    }
  }
}




// 4.flex-layout
@mixin flex-layout($direction:null, $just:null, $aSelf:null, $aContent:null, $aItem:null, $wrap:null) {
  display: flex;
  flex-direction: $direction;
  justify-content: $just;
  align-self: $aSelf;
  align-content: $aContent;
  align-items: $aItem;
  flex-wrap: $wrap;
  @content;
}

// 5.media quires 
@mixin media-quires($break) {
  @if $break=="xsmall" {
    @media (max-width: mq('xsmall')) {
      @content;
    }
  }

  @else if $break=="small" {
    @media (min-width: mq('small')) {
      @content;
    }
  }

  @else if $break=="medium" {
    @media (min-width: mq('medium')) {
      @content;
    }
  }
  @else if $break=="regular" {
    @media (min-width: mq('regular')) {
      @content;
    }
  }

  @else if $break=="xtra-large" {
    @media screen and (min-width: mq('xtra-large')) {
      @content;
    }
  }

  @else if $break=="large" {
    @media screen and (min-width: mq('large')) {
      @content;
    }
  }

  @else {
    @error "This is not a valid breakpoint ifrah! `#{$break}`. ";
  }
}

// Image replacement
@mixin img-replace($img, $w, $h, $disp: block) {
  background-image: url('#{$path--rel}/#{$img}');
  background-repeat: no-repeat;
  width: $w;
  height: $h;
  display: $disp;
}

//padding and padding
@mixin margin-padding($m-direction:null, $m-px:null, $p-direction:null, $p-px:null) {
  @if $m-direction==all {
    margin: $m-px;
  }

  @else {
    margin-#{$m-direction}: $m-px;
  }

  @if $p-direction==all {
    padding: $p-px;
  }

  @else {
    padding-#{$p-direction}: $p-px;
  }
}

//width and height
@mixin size($width:null, $height:null, $maxWidth:null, $h-specify:null) {
  @if $maxWidth==mx {
    max-width: $width;
  }

  @else {
    width: $width;
  }

  @if $h-specify==mx {
    max-height: $height;
  }

  @else if $h-specify==mn {
    min-height: $height;
  }

  @else {
    height: $height;
  }
}

//position
@mixin position($position, $top: null, $right: null, $bottom: null, $left: null) {
  position: $position;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

// 6.hero outer sections
@mixin outer-circle($size) {
  position: absolute;
  content: " ";
  width: $size;
  height: $size;
  border-radius: 50%;
  border: 1px solid rgba(225, 225, 225, 0.762);
}


@mixin outer-circle-position($left, $top, $delay:null) {
  left: $left;
  top: $top;
  animation-delay: $delay;
}






